@model PostViewModel
@{
    ViewBag.Title = "PostEdit";
}

<link href="~/assets/editor.md/css/editormd.css" rel="stylesheet" />
<script src="~/assets/editor.md/editormd.js?v=@DateTime.Now"></script>
<style>


    .titile_img {
        width: 94px;
        height: 94px;
        float: left;
        border: 1px solid #d3d3d3;
        margin-right: 16px;
        position: relative;
    }

        .titile_img img {
            width: 91px;
            height: 91px;
        }

    .titile_img_remove {
        width: 91px;
        height: 91px;
        position: absolute;
        background: url(/Content/images/cp_img_sc.png) no-repeat;
        top: 0;
        left: 0;
        z-index: 100;
        display: none;
    }

    .titile_img_add {
        width: 91px;
        height: 91px;
        float: left;
        border: 1px solid #d3d3d3;
        margin-right: 16px;
        background: url(/Content/images/cp_img_tj.png) no-repeat;
    }

        .titile_img_add:hover {
            background: url(/Content/images/cp_img_tj_a.png) no-repeat;
        }
</style>


@using (Html.BeginForm("PostEdit", "Item", FormMethod.Post, new { @class = "form-horizontal" }))
{

    @Html.HiddenFor(n => n.CatalogId)
    @Html.HiddenFor(n => n.Id)
    @Html.HiddenFor(n => n.TitleImg)
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label class="col-sm-2 control-label">标题</label>
        <div class="col-sm-10">
            @Html.TextBoxFor(n => n.Title, new { @class = "form-control", placeholder = "输入标题" })
        </div>
    </div>

    <div class="form-group">
        <label class="col-sm-2 control-label">摘要</label>
        <div class="col-sm-10">
            @Html.TextAreaFor(n => n.Description, new { @class = "form-control", rows = "3", style = "resize:none;", placeholder = "摘要：不填写则自动截取内容前255字符" })
        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">封面</label>
        <div class="col-sm-10">
            <div>
                <div id="fileList" style=""></div>
                <div class="titile_img_add" id="uploadbox">
                    <a class="titile_img_add" id="uploadfile" href="javascript:;"></a>
                </div>
            </div>


        </div>
    </div>
    <div class="form-group">
        <label class="col-sm-2 control-label">内容</label>
        <div class="col-sm-10">

            <div id="richText">
                @Html.TextAreaFor(n => n.Content, new
                {
                    @class = "form-control",
                    rows = "3",
                    style = "resize:none;",
                    placeholder = "内容 ",
                    display = "none"
                })
            </div>


        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-10">
            <button type="submit" class="btn btn-default">提交</button>
        </div>
    </div>


}


<script src="~/assets/plupload/js/plupload.full.min.js"></script>
<script src="~/assets/plupload/js/i18n/zh_CN.js"></script>

<script type="text/javascript">
    var testEditor;
    var maxFileSize = 10 * 1024 * 1024;

    $(function () {



        var md = "";
        testEditor = editormd("richText", {
            width: "100%",
            height: 740,
            path: '/assets/editor.md/lib/',
            //theme: "", //default dark
            //previewTheme: "dark", //default,dark
            //editorTheme: "pastel-on-dark", //pastel-on-dark
            markdown: md,
            codeFold: true,
            //syncScrolling : false,
            saveHTMLToTextarea: true,    // 保存 HTML 到 Textarea
            searchReplace: true,
            watch: false,                // 关闭实时预览
            htmlDecode: "style,script,iframe|on*",            // 开启 HTML 标签解析，为了安全性，默认不开启
            //toolbar  : false,             //关闭工具栏
            //previewCodeHighlight : false, // 关闭预览 HTML 的代码块高亮，默认开启
            emoji: true,
            taskList: true,
            tocm: true,         // Using [TOCM]
            tex: true,                   // 开启科学公式TeX语言支持，默认关闭
            flowChart: true,             // 开启流程图支持，默认关闭
            sequenceDiagram: true,       // 开启时序/序列图支持，默认关闭,
            //dialogLockScreen : false,   // 设置弹出层对话框不锁屏，全局通用，默认为true
            //dialogShowMask : false,     // 设置弹出层对话框显示透明遮罩层，全局通用，默认为true
            //dialogDraggable : false,    // 设置弹出层对话框不可拖动，全局通用，默认为true
            //dialogMaskOpacity : 0.4,    // 设置透明遮罩层的透明度，全局通用，默认值为0.1
            //dialogMaskBgColor : "#000", // 设置透明遮罩层的背景颜色，全局通用，默认为#fff
            imageUpload: true,
            imageFormats: ["jpg", "jpeg", "gif", "png", "bmp", "webp"],
            imageUploadURL: "/upload/files",
            onload: function () {
                //debugger
                //console.log('onload', this);
                //this.fullscreen();
                //this.unwatch();
                //this.watch().fullscreen();

                //this.setMarkdown("#PHP");
                //this.width("100%");
                //this.height(480);
                //this.resize("100%", 640);
            }
        });
        uploadfile();






    });




    function uploadfile() {
        var $ = jQuery,
            $list = $('#fileList'),

            // 优化retina, 在retina下这个值是2
            ratio = window.devicePixelRatio || 1,
            // 缩略图大小
            thumbnailWidth = 190 * ratio,
            thumbnailHeight = 190 * ratio;


      var   uploader = new plupload.Uploader({
            runtimes: 'html5,flash,silverlight,html4',
            browse_button: 'uploadfile',
            container: 'uploadbox',
            url: '@Url.Content("~/upload/files")',
            flash_swf_url: '@Url.Content("~/assets/plupload/js/Moxie.swf")',
            silverlight_xap_url: '@Url.Content("~/assets/plupload/js/Moxie.xap")',
            filters: {
                mime_types : [ //只允许上传图片和zip文件
                    { title: "Image files", extensions: "jpg,gif,png,jpeg,webp,bmp" }
                ],
                max_file_size: '20mb', //最大只能上传400kb的文件
                prevent_duplicates : true //不允许选取重复文件
            },
            unique_names: true,
            multipart_params: {
                __RequestVerificationToken: $("input[name='__RequestVerificationToken']").val(),
                ownerid: $("#TitleImg").val(),
                fileId: ''
            },
            //resize: {
            //    width: 100,
            //    height: 100,
            //    crop: true,
            //    quality: 60,
            //    preserve_headers: false
            //},
            // PreInit events, bound before any internal events
            preinit : {
                Init: function(up, info) {
                    //console.log('[Init]', 'Info:', info, 'Features:', up.features);
                },

                UploadFile: function(up, file) {
                    //console.log('[UploadFile]', file);

                    //up.setOption('fileId', file.id);
                    // You can override settings before the file is uploaded
                    // up.setOption('url', 'upload.php?id=' + file.id);
                    // up.setOption('multipart_params', {param1 : 'value1', param2 : 'value2'});
                }
            },
            init: {
                BeforeUpload:function(up,file){
                    //重点在这里，上传的时候自定义参数信息
                    up.setOption('fileId', file.id);
                },
                FilesAdded: function (up, files) {
                    uploader.start();
                },
                //每个上传完成后事件
                FileUploaded: function (up, file, response) {
                    //debugger;
                    //console.log(file);
                    var json = JSON.parse(response.response);
                    console.log(json);
                   //fileList
                    var $li = '' +
                        '<div class="titile_img"' +
                        ' id="' + file.id+'" >'+
                        '<img  src="' + json.url +
                        '"  >' +
                        //' <input name="titleImgURL" id="' + file.id +'" value="' + json.url +'" type="hidden"/> "'+
                        '<div class="titile_img_remove"  style="display: none;"></div></div>';

                    // $list为容器jQuery实例
                    $list.append($li);


                },
                //所有文件上传完成后事件
                UploadComplete: function (up, files) {
                    console.log(files);

                },
                Error: function (up, err) {
                    if (err.code === -600) {
                        alert("附件大小不可超过20M！");
                    }
                    else {
                        alert(err.message);
                    }

                    console.log("\n Error #" + err.code + ": " + err.message);

                }
            }
        });
        uploader.init();

        $("#fileList")
            .on("mouseover", ".titile_img", function () {
                //console.log("mouseover");
                $(this).children(".titile_img_remove").css('display', 'block');
            })
            .on("mouseout", ".titile_img", function () {
                //console.log("mouseout");
                $(this).children(".titile_img_remove").css('display', 'none');
            });

        $("#fileList").on("click", ".titile_img_remove", function () {
            //debugger
            var id = $(this).parent().attr("id");
            $(this).parent().remove();
            var uploaderFiles = uploader.files;
            for (var i = 0; i < uploaderFiles.length; i++) {
                if (uploaderFiles[i] != '' && uploaderFiles[i].id === id) {
                    uploader.removeFile(uploaderFiles[i]);
                }
            }
            //


        });


    }
    function getRootPath() {
        debugger;
        var strFullPath = window.document.location.href;
        var strPath = window.document.location.pathname;
        var pos = strFullPath.indexOf(strPath);
        var prePath = strFullPath.substring(0, pos);
        if (strPath.substr(1).indexOf('/') > 0) {
            strPath = strPath.substring(0, strPath.substr(1).indexOf('/') + 1);
        }
        if (window.location.host == "localhost") {
            return (prePath + strPath);
        } else {
            return "http://" + window.location.host;
        }
        //Barfoo_Framework_ServiceApp

    }


</script>

