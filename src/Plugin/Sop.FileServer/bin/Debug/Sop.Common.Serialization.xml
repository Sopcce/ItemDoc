<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sop.Common.Serialization</name>
    </assembly>
    <members>
        <member name="M:Sop.Common.Serialization.JsonUtility.ToJson(System.Object,Sop.Common.Serialization.Json.DateTimeType,System.String)">
            <summary>
            To the json.
            </summary>
            <param name="obj">The object.</param>
            <param name="dateTimeType">Type of the date time.</param>
            <param name="dateFormatString">The date format string.</param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.JsonUtility.ToJson(System.Object,Sop.Common.Serialization.Json.PropertyNameType)">
            <summary>
            To the json.
            </summary>
            <param name="obj">The object.</param>
            <param name="type">The type.</param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.JsonUtility.ToJson(System.Object,System.Object)">
            <summary>
            To the json.
            </summary>
            <param name="obj">The object.</param>
            <param name="settings">The settings.</param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.JsonUtility.FromJson``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="json"></param>
            <returns></returns>
        </member>
        <member name="T:Sop.Common.Serialization.Json.JsonTimeStampConverter">
            <summary>  
            Newtonsoft.Json序列化扩展特性  
            <para>DateTime序列化（输出为时间戳）</para>  
            </summary>  
            <summary>  
            Newtonsoft.Json序列化扩展特性  
            <para>DateTime序列化（输出为时间戳）</para>  
            </summary>  
        </member>
        <member name="T:Sop.Common.Serialization.Json.UnicodeConverter">
            <summary>  
            Newtonsoft.Json序列化扩展特性  
            <para>String Unicode 序列化（输出为Unicode编码字符）</para>  
            </summary>  
        </member>
        <member name="M:Sop.Common.Serialization.Json.DateTimeExtensions.DateTimeToUnixTimestamp(System.DateTime)">
            <summary>
            Dates the time to unix timestamp.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.Json.DateTimeExtensions.UnixTimestampToDateTime(System.DateTime,System.Int64)">
            <summary>
            Unixes the timestamp to date time.
            </summary>
            <param name="target">The target.</param>
            <param name="timestamp">The timestamp.</param>
            <returns></returns>
        </member>
        <member name="T:Sop.Common.Serialization.XmlToModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sop.Common.Serialization.XmlToModel.ToXml``1(``0)">
            <summary>
            实体转xml
            </summary>
            <typeparam name="T"></typeparam>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.XmlToModel.ToModel``1(System.String)">
            <summary>
            xml转实体
            </summary>
            <typeparam name="T"></typeparam>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.XmlToModel.IsValidXml(System.String)">
            <summary>
            
            </summary>
            <param name="xml"></param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.XML.ListExtend.Load``1(System.Collections.Generic.List{``0})">
            <summary>
            加载XML文档返回List集合
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.XML.ListExtend.Save``1(System.Collections.Generic.List{``0})">
            <summary>
            将list集合保存为XML文档
            </summary>
            <typeparam name="TSource"></typeparam>
            <param name="source"></param>
        </member>
        <member name="M:Sop.Common.Serialization.XML.PathRoute.GetDiskFilePath(System.String)">
            <summary>
            获取物理磁盘文件路径
            </summary>
            <param name="filePath">
                <remarks>
                    <para>filePath支持以下格式：</para>
                    <list type="bullet">
                    <item>~/abc/</item>
                    <item>c:\abc\</item>
                    <item>\\192.168.0.1\abc\</item>
                    </list>
                </remarks>
            </param>
            <returns>物理磁盘文件路径</returns>
        </member>
        <member name="M:Sop.Common.Serialization.XML.PathRoute.Combine(System.String[])">
            <summary>
            System.IO.Path.Combine 扩展，主要是用于路径拼接
            1、当path2 是相对路径的时候，返回的是path2，path1会被丢弃
            2、路径是驱动器，返回的结果不正确
            3、无法连接http路径 
            </summary>
            <example>
            <code> Combine(p1, "p2", "\\p3/", p4));</code>
            </example>
            <see>
            <![CDATA[
            http://www.jb51.net/article/36744.htm
            http://www.cnblogs.com/LoveJenny/archive/2012/03/05/2381094.html]]>
            </see>
            <param name="paths">拼接路径</param>
            <returns>返回拼接之后的路径</returns>
        </member>
        <member name="T:Sop.Common.Serialization.XmlHelper`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Sop.Common.Serialization.XmlHelper`1.SetPath(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Sop.Common.Serialization.XmlHelper`1.GetLastErrMsg">
            <summary>
            获取最后一次错误的信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.XmlHelper`1.Insert(`0)">
            <summary>
            插入XML实体类对象
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.XmlHelper`1.DeleteById(System.Guid)">
            <summary>
            根据ID删除XML实体类对象
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.XmlHelper`1.Update(`0)">
            <summary>
            更新XML实体类对象
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.XmlHelper`1.GetAll">
            <summary>
            获取所有的指定类型的XML实体类对象
            </summary>
            <returns></returns>
        </member>
        <member name="M:Sop.Common.Serialization.XmlHelper`1.GetById(System.Guid)">
            <summary>
            根据ID获取指定类型的XML实体类对象
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
    </members>
</doc>
